Addison Kauzer(scribe)/Eric Scaramuzzo(driver)

Step 1
object Main extends App{
  class Expr
  case class Number(value : Int) extends Expr
  case class Variable(name : String) extends Expr
  case class Operator(left : Expr, right : Expr,
                      f: (Int, Int) => Int) extends Expr

  def eval(expr : Expr, symbols : Map[String, Int]) : Int =
    expr match {
      case Number(num) => num
      case Variable(name) => symbols(name)
      case Operator(left, right, f) => f(eval(left, symbols), eval(right, symbols))
    }

  val operation = Operator(Number(3), Operator(Number(4), Variable("x"), _ * _), _ + _)
  print(eval(operation, Map("x" -> 5)))

}